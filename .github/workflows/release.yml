name: Rust

on:
  push:
    tags:
    - 'v*'

env:
  RELEASE_ARTIFACT_NAME: font-loader
  CARGO_TERM_COLOR: always

jobs:
  build:

    strategy:
      matrix:
        target:
        - i686-pc-windows-msvc
        - x86_64-pc-windows-msvc
        include:
        - target: i686-pc-windows-msvc
          os: windows-latest
        - target: x86_64-pc-windows-msvc
          os: windows-latest

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Add Toolchain
      run: rustup target add ${{ matrix.target }}
    - name: Build
      run: cargo build --release --target=${{ matrix.target }} --verbose
    - name: Run tests
      run: cargo test --release --target=${{ matrix.target }} --verbose

    - name: Package for Windows
      if: ${{ matrix.os == 'windows-latest' }}
      run: powershell Compress-Archive -Path target/${{ matrix.target }}/release/font-loader.exe -DestinationPath "${{ env.RELEASE_ARTIFACT_NAME }}-${{ matrix.target }}.zip"

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2
      with:
        name: build-${{ matrix.target }}
        path: ${{ env.RELEASE_ARTIFACT_NAME }}-${{ matrix.target }}.zip

  create-release:

    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - run: echo '${{ steps.create-release.outputs.upload_url }}' > release_upload_url.txt
      - uses: actions/upload-artifact@v2
        with:
          name: create-release
          path: release_upload_url.txt
          
  upload-release:

    strategy:
      matrix:
        target:
        - i686-pc-windows-msvc
        - x86_64-pc-windows-msvc

    needs: [create-release]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@v2
      with:
        name: create-release
    - id: upload-url
      run: echo "::set-output name=url::$(cat release_upload_url.txt)"
    - uses: actions/download-artifact@v2
      with:
        name: build-${{ matrix.target }}
    - uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.upload-url.outputs.url }}
        asset_path: ${{ env.RELEASE_ARTIFACT_NAME }}-${{ matrix.target }}.zip
        asset_name: ${{ env.RELEASE_ARTIFACT_NAME }}-${{ matrix.target }}.zip
        asset_content_type: application/zip
